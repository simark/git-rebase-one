#!/usr/bin/env bash

set -e

if [ $# -lt 1 ]; then
  echo "Expecting at least one argument, the branch to rebase onto."
  exit 1
fi

target_ref="$1"
shift

n=1

if [ $# -ge 1 ]; then
  n=$1
  shift
fi


if [ $# -ge 1 ]; then
  echo "Unexpected extra arguments: $*"
  exit 11
fi

echo "Using jumps of $n commit(s)"

# Find merge base of current HEAD and target branch.
merge_base=$(git merge-base HEAD "${target_ref}")
echo "Merge base is: $(git show --oneline --no-patch "${merge_base}")"

num_commits=$(git rev-list --reverse "${merge_base}..${target_ref}" | wc -l)
echo "${num_commits} commits to go"

if [ "${num_commits}" -eq 0 ]; then
  echo "Up to date"
  exit 12
fi

# Find first commit after merge base on the target branch.
next_commit=$(git rev-list --reverse "${merge_base}..${target_ref}" | head -n $n | tail -n 1)
echo "Next commit is: $(git show --oneline --no-patch "${next_commit}")"

# Rebase on that commit.
if ! git rebase "${next_commit}"; then
  exit 13
fi
